Address,BO: Null input,BO: Empty string,BO: Short address,BO: Invalid hex,BO: Zero address (valid),BO: Number instead of address,BO: Boolean instead of address,BO: Array instead of address,BO: Object instead of address,BO: Invalid length address,OO: Null input,OO: Undefined,OO: Negative tokenId,OO: String instead of number,OO: Large number,OO: Floating-point number,OO: Boolean input,OO: Object instead of number,OO: Array instead of number,OO: Array with more than one number,TF: Null from,TF: Null to,TF: Null tokenId,TF: Invalid from address (short),TF: Invalid to address (short),TF: Invalid from address (string),TF: Invalid to address (string),TF: Number instead of from,TF: Array instead of to,TF: Object instead of from,TF: String tokenId,TF: Negative tokenId,TF: Float tokenId,TF: Zero address from,TF: Zero address to,STF: Null from,STF: Null to,STF: Null tokenId,STF: Short from,STF: String to,STF: Number from,STF: Array to,STF: Object from,STF: Invalid tokenId string,STF: Negative tokenId,STF: Float tokenId,STF: Zero address from,STF: Zero address to,A: Null address,A: Invalid address (short),A: Invalid address (string),A: Array instead of address,A: Object instead of address,A: Null tokenId,A: String tokenId,A: Negative tokenId,A: Float tokenId,A: Zero address as 'to',SAFA: Null operator address,SAFA: Invalid operator address (short),SAFA: Invalid operator address (string),SAFA: Array instead of operator address,SAFA: Object instead of operator address,SAFA: Zero address as operator,SAFA: Valid via impersonation,GA: Null tokenId,GA: String tokenId,GA: Negative tokenId,GA: Float tokenId,GA: Valid via impersonation,IAFA: Null owner address,IAFA: Null operator address,IAFA: Invalid owner address (short),IAFA: Invalid operator address (short),IAFA: Invalid owner address (string),IAFA: Invalid operator address (string),IAFA: Zero address as owner,IAFA: Zero address as operator,IAFA: Valid via impersonation
0xDCA91409018ea80B71d21E818f00e76072969861,"PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","PASS","FAIL","FAIL","PASS","PASS","PASS","PASS","FAIL","PASS","PASS","PASS","PASS","PASS","PASS","FAIL","PASS","PASS"
