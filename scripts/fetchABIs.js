// fetchABIs.js

const axios = require('axios');
const fs = require('fs');

// List of contract addresses to fetch ABIs for
const contractAddresses = [
  // Add more contract addresses here
  '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',
  '0xD90829C6C6012E4DdE506BD95d7499A04b9A56de',
  '0x60E4d786628Fea6478F785A6d7e704777c86a7c6',
  '0x524cAB2ec69124574082676e6F654a18df49A048',
  '0xBd3531dA5CF5857e7CfAA92426877b022e612cf8',
  '0x059EDD72Cd353dF5106D2B9cC5ab83a52287aC3a',
  '0x466CFcD0525189b573E794F554b8A751279213Ac',
  '0x59325733eb952a92e069C87F0A6168b29E80627f',
  '0xa7d8d9ef8D8Ce8992Df33D8b8CF4Aebabd5bD270',
  '0x55700cd2E91f39bc56F589B346daC12a7907eA08',
  '0xE64419a4a32Bf73743118eD18a442C35F64d57d0',
  '0xB8Ea78fcaCEf50d41375E44E6814ebbA36Bb33c4',
  '0xED5AF388653567Af2F388E6224dC7C4b3241C544',
  '0xF39c410Dac956BA98004f411E182FB4EEd595270',
  '0x5C1A0CC6DAdf4d0fB31425461df35Ba80fCBc110',
  '0xd1169e5349d1cB9941F3DCbA135C8A4b9eACFDDE',
  '0xB6a37b5d14D502c3Ab0Ae6f3a0E058BC9517786e',
  '0xaaDc2D4261199ce24A4B0a57370c4FCf43BB60aa',
  '0x8A939fd297FAb7388d6e6C634eEe3C863626bE57',
  '0xB852c6b5892256C264Cc2C888eA462189154D8d7',
  '0xa8eDF6C9ac6BF1A00AfaACA6E0Ca705B89192fb9',
  '0x282BDD42f4eb70e7A9D9F40c8fEA0825B7f68C5D',
  '0xd16809C0a7d82C9E7552a01Fd608fFF90EFb564f',
  '0x5946aeAAB44e65Eb370FFaa6a7EF2218Cff9b47D',
  '0xa3AEe8BcE55BEeA1951EF834b99f3Ac60d1ABeeB',
  '0xd70F41Dd5875EEE7fa9DD8048567bC932124A8d2',
  '0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623',
  '0x062E691c2054dE82F28008a8CCC6d7A1c8ce060D',
  '0x6339e5E072086621540D0362C4e3Cea0d643E114',
  '0x8A7ebc8fb603C06834d04af223b89C38229B9a7c',
  '0xd774557b647330C91Bf44cfEAB205095f7E6c367',
  '0x8C186802b1992f7650Ac865d4CA94D55fF3C0d17',
  '0x1A92f7381B9F03921564a437210bB9396471050C',
  '0xd564C25B760cb278a55bDD98831f4ff4B6C97B38',
  '0x7Fb2D396a3cc840f2c4213F044566ed400159b40',
  '0xc9D8F15803c645e98B17710a0b6593F097064bEF',
  '0x7Bd29408f11D2bFC23c34f18275bBf23bB716Bc7',
  '0x790B2cF29Ed4F310bf7641f013C65D4560d28371',
  '0x769272677faB02575E84945F03Eca517ACc544Cc',
  '0x30D869adB3A0b5D1d281325bea17a30fdc65080C',
  '0x23581767a106ae21c074b2276D25e5C3e136a68b',
  '0x6250b989ecf7cb82c7892E1CEA604eD813423635',
  '0xd21818B6052dF69EEd04E9b2aF564b75140aAcb7',
  '0x0Fc3DD8C37880a297166BEd57759974A157f0E74',
  '0x036721e5A769Cc48B3189EFbb9ccE4471E8A48B1',
  '0x475bFaa1848591ae0E6aB69600f48d828f61a80E',
  '0xB75F09b4340aEb85Cd5F2Dd87d31751EDC11ed39',
  '0xbe9371326F91345777b04394448c23E2BFEaa826',
  '0xa74c0B5aDEa01dF5A43a6C6b5e012Dc8eD5D2687',
  '0xbAbaFdd8045740449a42B788a26E9b3A32F88aC1',
  '0x9b7E68482B20D7843201eBf6715B5E86e0114625',
  '0x9CF0aB1cc434dB83097B7E9c831a764481DEc747',
  '0x306b1ea3ecdf94aB739F1910bbda052Ed4A9f949',
  '0xEeca64ea9fCf99A22806Cd99b3d29cf6e8D54925',
  '0x49cF6f5d44E70224e2E23fDcdd2C053F30aDA28B',
  '0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6',
  '0x1a3c1Bf0Bd66Eb15cD4A61b76A20Fb68609f97Ef',
  '0x96e22537c62B04c5C5b5fe9Ad29aaeEB5AB536df',
  '0xC4973de5eE925b8219f1E74559FB217A8e355EcF',
  '0xD3D9ddd0CF0A5F0BFB8f7fcEAe075DF687eAEBaB',
  '0x3bf2922f4520a8BA0c2eFC3D2a1539678DaD5e9D',
  '0x0000000005756B5a03E751bD0280e3A55BC05B6E',
  '0x364C828eE171616a39897688A831c2499aD972ec',
  '0x31385d3520bCED94f77AaE104b406994D8F2168C',
  '0x09233d553058c2F42ba751C87816a8E9FaE7Ef10',
  '0x34eEBEE6942d8Def3c125458D1a86e0A897fd6f9',
  '0x79FCDEF22feeD20eDDacbB2587640e45491b757f',
  '0x80336Ad7A747236ef41F47ed2C7641828a480BAA',
  '0xCcc441ac31f02cD96C153DB6fd5Fe0a2F4e6A68d',
  '0xD93Ec495FABbDEcd6dfA45bc60F9B634874B634b',
  '0x9613Bef9d9D00Ef87a48a124b8Cab469047C4bCf',
  '0x87d25e5e755b69943572A58936843FfA894AFd66',
  '0x74f70713B0515e9F520D6c764352E45e227839b7',
  '0x98Dc31A9648F04E23e4E36B0456D1951531C2a05',
  '0xF845e3d7AE916CA50C7Db40808E9Cc579B5f6705',
  '0x5CC5B05a8A13E3fBDB0BB9FcCd98D38e50F90c38',
  '0x1AaBA8552D4e2fbFC99bC86F31f28788c7dc1218',
  '0x963590FaBDc1333D03BC3Af42a6B2Ab33e21e2eE',
  '0xE90d8Fb7B79C8930B5C8891e61c298b412a6e81a',
  '0x11B3EfbF04F0bA505F380aC20444B6952970AdA6',
  '0x67b8afDDb494C16b779E6F23e1de5Dbf3437F857',
  '0xF6ee484f82f28d69688f37fe90Af514ce212b7c3',
  '0x9378368ba6b85c1FbA5b131b530f5F5bEdf21A18',
  '0xFF4c58AE2a73aD5f7903Da3c80cBa77d0347E1EE',
  '0x3110EF5f612208724CA51F5761A69081809F03B7',
  '0xe4D20bc4A845aa35B008f5F9f85E50b581dF7263',
  '0x08D7C0242953446436F34b4C78Fe9da38c73668d',
  '0x0dA642E3eD481b119cc212b6f1C9BEf04e3211Ab',
  '0x0FCBD68251819928C8f6D182fC04bE733fA94170',
  '0xe2fcFBD86E386857a97e0833c888f35405c3Cdd7',
  '0xA5C8b1c32d05dF6F4E6267485452f784e8AE5007',
  '0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85',
];

const etherscanApiKey = '9HG2298MKSCN6THHD3JQW2M83KNXNMWQTV'; // Replace with your API key

// Function to fetch ABI for a given contract address
async function fetchABI(address) {
  const url = `https://api.etherscan.io/api?module=contract&action=getabi&address=${address}&apikey=${etherscanApiKey}`;
  try {
    const response = await axios.get(url);
    if (response.data.status === "1") {
      return JSON.parse(response.data.result);
    } else {
      console.log(`Failed to fetch ABI for ${address}`);
      return null;
    }
  } catch (error) {
    console.error(`Error fetching ABI for ${address}:`, error);
    return null;
  }
}

// Fetch ABIs for all contracts and save them
async function fetchAndSaveABIs() {
  const abis = {};
  for (let address of contractAddresses) {
    const abi = await fetchABI(address);
    if (abi) {
      abis[address] = abi;
      fs.writeFileSync(`abis/${address}.json`, JSON.stringify(abi, null, 2));
      console.log(`âœ… Saved ABI for ${address}`);
    }
  }
}

fetchAndSaveABIs();
